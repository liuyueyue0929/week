{"version":3,"sources":["curCSS-compiled.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,SAAD,EAAY,iBAAZ,EAA+B,eAA/B,EAAgD,iBAAhD,EAAmE,WAAnE,EAAgF,aAAhF,CAA8F;AAA9F,CAAP,EACG,UAAU,MAAV,EAAkB,SAAlB,EAA6B,OAA7B,EAAsC,SAAtC,EAAiD,OAAjD,EAA0D;;AAE5D;;AAEA,UAAS,MAAT,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,QAA5B,EAAsC;AACrC,MAAI,KAAJ;AAAA,MACI,QADJ;AAAA,MAEI,QAFJ;AAAA,MAGI,GAHJ;;;AAMA;AACA;AACA;AACA;AACA,UAAQ,KAAK,KAVb;;AAYA,aAAW,YAAY,UAAU,IAAV,CAAvB;;AAEA;AACA;AACA;AACA,MAAI,QAAJ,EAAc;AACb,SAAM,SAAS,gBAAT,CAA0B,IAA1B,KAAmC,SAAS,IAAT,CAAzC;;AAEA,OAAI,QAAQ,EAAR,IAAc,CAAC,OAAO,QAAP,CAAgB,KAAK,aAArB,EAAoC,IAApC,CAAnB,EAA8D;AAC7D,UAAM,OAAO,KAAP,CAAa,IAAb,EAAmB,IAAnB,CAAN;AACA;;AAED;AACA;AACA;AACA;AACA;AACA,OAAI,CAAC,QAAQ,gBAAR,EAAD,IAA+B,UAAU,IAAV,CAAe,GAAf,CAA/B,IAAsD,QAAQ,IAAR,CAAa,IAAb,CAA1D,EAA8E;;AAE7E;AACA,YAAQ,MAAM,KAAd;AACA,eAAW,MAAM,QAAjB;AACA,eAAW,MAAM,QAAjB;;AAEA;AACA,UAAM,QAAN,GAAiB,MAAM,QAAN,GAAiB,MAAM,KAAN,GAAc,GAAhD;AACA,UAAM,SAAS,KAAf;;AAEA;AACA,UAAM,KAAN,GAAc,KAAd;AACA,UAAM,QAAN,GAAiB,QAAjB;AACA,UAAM,QAAN,GAAiB,QAAjB;AACA;AACD;;AAED,SAAO,QAAQ,SAAR;;AAEP;AACA;AACA,QAAM,EAJC,GAII,GAJX;AAKA;;AAED,QAAO,MAAP;AACA,CA7DD;;AA+DA","file":"curCSS-compiled-compiled.js","sourcesContent":["define([\"../core\", \"./var/rnumnonpx\", \"./var/rmargin\", \"./var/getStyles\", \"./support\", \"../selector\" // Get jQuery.contains\n], function (jQuery, rnumnonpx, rmargin, getStyles, support) {\n\n\t\"use strict\";\n\n\tfunction curCSS(elem, name, computed) {\n\t\tvar width,\n\t\t    minWidth,\n\t\t    maxWidth,\n\t\t    ret,\n\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\t\tcomputed = computed || getStyles(elem);\n\n\t\t// getPropertyValue is needed for:\n\t\t//   .css('filter') (IE 9 only, #12537)\n\t\t//   .css('--customProperty) (#3144)\n\t\tif (computed) {\n\t\t\tret = computed.getPropertyValue(name) || computed[name];\n\n\t\t\tif (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n\t\t\t\tret = jQuery.style(elem, name);\n\t\t\t}\n\n\t\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t\t// Android Browser returns percentage for some values,\n\t\t\t// but width seems to be reliably pixels.\n\t\t\t// This is against the CSSOM draft spec:\n\t\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\t\tif (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {\n\n\t\t\t\t// Remember the original values\n\t\t\t\twidth = style.width;\n\t\t\t\tminWidth = style.minWidth;\n\t\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t\t// Put in the new values to get a computed value out\n\t\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\t\tret = computed.width;\n\n\t\t\t\t// Revert the changed values\n\t\t\t\tstyle.width = width;\n\t\t\t\tstyle.minWidth = minWidth;\n\t\t\t\tstyle.maxWidth = maxWidth;\n\t\t\t}\n\t\t}\n\n\t\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" : ret;\n\t}\n\n\treturn curCSS;\n});\n\n//# sourceMappingURL=curCSS-compiled.js.map"]}