{"version":3,"sources":["amd-compiled.js"],"names":[],"mappings":"AAAA,OAAO,CAAC,SAAD,CAAP,EAAoB,UAAU,MAAV,EAAkB;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,KAAI,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAA3C,EAAgD;AAC/C,SAAO,QAAP,EAAiB,EAAjB,EAAqB,YAAY;AAChC,UAAO,MAAP;AACA,GAFD;AAGA;AACD,CAtBD;;AAwBA","file":"amd-compiled-compiled.js","sourcesContent":["define([\"../core\"], function (jQuery) {\n\n\t\"use strict\";\n\n\t// Register as a named AMD module, since jQuery can be concatenated with other\n\t// files that may use define, but not via a proper concatenation script that\n\t// understands anonymous AMD modules. A named AMD is safest and most robust\n\t// way to register. Lowercase jquery is used because AMD module names are\n\t// derived from file names, and jQuery is normally delivered in a lowercase\n\t// file name. Do this after creating the global so that if an AMD module wants\n\t// to call noConflict to hide this version of jQuery, it will work.\n\n\t// Note that for maximum portability, libraries that are not jQuery should\n\t// declare themselves as anonymous modules, and avoid setting a global if an\n\t// AMD loader is present. jQuery is a special case. For more information, see\n\t// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine(\"jquery\", [], function () {\n\t\t\treturn jQuery;\n\t\t});\n\t}\n});\n\n//# sourceMappingURL=amd-compiled.js.map"]}