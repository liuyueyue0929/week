{"version":3,"sources":["index-compiled.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA;;;;;AAKA,IAAI,gCAAgC,gCAApC;;AAEA;;;;;AAKA,IAAI,oBAAoB,OAAxB;;AAEA;;;;;AAKA,OAAO,OAAP,GAAiB,KAAjB;;AAEA;;;;;;;;;AASA,SAAS,KAAT,CAAe,UAAf,EAA2B,UAA3B,EAAuC;AACrC;AACA,MAAI,gBAAgB,WAAW,mBAAX,CAApB;AACA,MAAI,YAAY,WAAW,eAAX,CAAhB;;AAEA;AACA,MAAI,CAAC,aAAD,IAAkB,CAAC,SAAvB,EAAkC;AAChC,WAAO,KAAP;AACD;;AAED;AACA;AACA;AACA,MAAI,eAAe,WAAW,eAAX,CAAnB;AACA,MAAI,gBAAgB,8BAA8B,IAA9B,CAAmC,YAAnC,CAApB,EAAsE;AACpE,WAAO,KAAP;AACD;;AAED;AACA,MAAI,aAAa,cAAc,GAA/B,EAAoC;AAClC,QAAI,OAAO,WAAW,MAAX,CAAX;AACA,QAAI,YAAY,CAAC,IAAD,IAAS,UAAU,KAAV,CAAgB,iBAAhB,EAAmC,KAAnC,CAAyC,UAAU,KAAV,EAAiB;AACjF,aAAO,UAAU,IAAV,IAAkB,UAAU,OAAO,IAAnC,IAA2C,OAAO,KAAP,KAAiB,IAAnE;AACD,KAFwB,CAAzB;;AAIA,QAAI,SAAJ,EAAe;AACb,aAAO,KAAP;AACD;AACF;;AAED;AACA,MAAI,aAAJ,EAAmB;AACjB,QAAI,eAAe,WAAW,eAAX,CAAnB;AACA,QAAI,gBAAgB,CAAC,YAAD,IAAiB,KAAK,KAAL,CAAW,YAAX,IAA2B,KAAK,KAAL,CAAW,aAAX,CAAhE;;AAEA,QAAI,aAAJ,EAAmB;AACjB,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAED","file":"index-compiled-compiled.js","sourcesContent":["/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;\n\n/**\n * Simple expression to split token list.\n * @private\n */\n\nvar TOKEN_LIST_REGEXP = / *, */;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh;\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh(reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since'];\n  var noneMatch = reqHeaders['if-none-match'];\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false;\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control'];\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false;\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag'];\n    var etagStale = !etag || noneMatch.split(TOKEN_LIST_REGEXP).every(function (match) {\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag;\n    });\n\n    if (etagStale) {\n      return false;\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified'];\n    var modifiedStale = !lastModified || Date.parse(lastModified) > Date.parse(modifiedSince);\n\n    if (modifiedStale) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n//# sourceMappingURL=index-compiled.js.map"]}