{"version":3,"sources":["index-compiled.js"],"names":[],"mappings":"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","file":"index-compiled-compiled.js","sourcesContent":["/*!\n * finalhandler\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('finalhandler');\nvar encodeUrl = require('encodeurl');\nvar escapeHtml = require('escape-html');\nvar onFinished = require('on-finished');\nvar parseUrl = require('parseurl');\nvar statuses = require('statuses');\nvar unpipe = require('unpipe'\n\n/**\n * Module variables.\n * @private\n */\n\n);var DOUBLE_SPACE_REGEXP = /\\x20{2}/g;\nvar NEWLINE_REGEXP = /\\n/g;\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function' ? setImmediate : function (fn) {\n  process.nextTick(fn.bind.apply(fn, arguments));\n};\nvar isFinished = onFinished.isFinished;\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument(message) {\n  var body = escapeHtml(message).replace(NEWLINE_REGEXP, '<br>').replace(DOUBLE_SPACE_REGEXP, ' &nbsp;');\n\n  return '<!DOCTYPE html>\\n' + '<html lang=\"en\">\\n' + '<head>\\n' + '<meta charset=\"utf-8\">\\n' + '<title>Error</title>\\n' + '</head>\\n' + '<body>\\n' + '<pre>' + body + '</pre>\\n' + '</body>\\n' + '</html>\\n';\n}\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = finalhandler;\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler(req, res, options) {\n  var opts = options || {};\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development';\n\n  // get error callback\n  var onerror = opts.onerror;\n\n  return function (err) {\n    var headers;\n    var msg;\n    var status;\n\n    // ignore 404 on in-flight response\n    if (!err && res._header) {\n      debug('cannot 404 after headers sent');\n      return;\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err\n\n      // respect headers from error\n      );if (status !== undefined) {\n        headers = getErrorHeaders(err);\n      }\n\n      // fallback to status code on response\n      if (status === undefined) {\n        status = getResponseStatusCode(res);\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env);\n    } else {\n      // not found\n      status = 404;\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(parseUrl.original(req).pathname);\n    }\n\n    debug('default %s', status\n\n    // schedule onerror callback\n    );if (err && onerror) {\n      defer(onerror, err, req, res);\n    }\n\n    // cannot actually respond\n    if (res._header) {\n      debug('cannot %d after headers sent', status);\n      req.socket.destroy();\n      return;\n    }\n\n    // send response\n    send(req, res, status, headers, msg);\n  };\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders(err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined;\n  }\n\n  var headers = Object.create(null);\n  var keys = Object.keys(err.headers);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    headers[key] = err.headers[key];\n  }\n\n  return headers;\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage(err, status, env) {\n  var msg;\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack;\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString();\n    }\n  }\n\n  return msg || statuses[status];\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode(err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status;\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode;\n  }\n\n  return undefined;\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode(res) {\n  var status = res.statusCode;\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500;\n  }\n\n  return status;\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send(req, res, status, headers, message) {\n  function write() {\n    // response body\n    var body = createHtmlDocument(message\n\n    // response status\n    );res.statusCode = status;\n    res.statusMessage = statuses[status];\n\n    // response headers\n    setHeaders(res, headers\n\n    // security headers\n    );res.setHeader('Content-Security-Policy', \"default-src 'self'\");\n    res.setHeader('X-Content-Type-Options', 'nosniff'\n\n    // standard headers\n    );res.setHeader('Content-Type', 'text/html; charset=utf-8');\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'));\n\n    if (req.method === 'HEAD') {\n      res.end();\n      return;\n    }\n\n    res.end(body, 'utf8');\n  }\n\n  if (isFinished(req)) {\n    write();\n    return;\n  }\n\n  // unpipe everything from the request\n  unpipe(req\n\n  // flush the request\n  );onFinished(req, write);\n  req.resume();\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders(res, headers) {\n  if (!headers) {\n    return;\n  }\n\n  var keys = Object.keys(headers);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    res.setHeader(key, headers[key]);\n  }\n}\n\n//# sourceMappingURL=index-compiled.js.map"]}