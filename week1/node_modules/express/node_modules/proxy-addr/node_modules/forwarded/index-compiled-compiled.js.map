{"version":3,"sources":["index-compiled.js"],"names":[],"mappings":"AAAA;;;;;;AAMA;;;;AAIA,OAAO,OAAP,GAAiB,SAAjB;;AAEA;;;;;;;AAOA,SAAS,SAAT,CAAmB,GAAnB,EAAwB;AACtB,MAAI,CAAC,GAAL,EAAU;AACR,UAAM,IAAI,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED;AACA,MAAI,aAAa,CAAC,IAAI,OAAJ,CAAY,iBAAZ,KAAkC,EAAnC,EAAuC,KAAvC,CAA6C,OAA7C,EAAsD,MAAtD,CAA6D,OAA7D,EAAsE,OAAtE,EAAjB;AACA,MAAI,aAAa,IAAI,UAAJ,CAAe,aAAhC;AACA,MAAI,QAAQ,CAAC,UAAD,EAAa,MAAb,CAAoB;;AAEhC;AAFY,GAAZ,CAGE,OAAO,KAAP;AACH;;AAED","file":"index-compiled-compiled.js","sourcesContent":["/*!\n * forwarded\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = forwarded;\n\n/**\n * Get all addresses in the request, using the `X-Forwarded-For` header.\n *\n * @param {Object} req\n * @api public\n */\n\nfunction forwarded(req) {\n  if (!req) {\n    throw new TypeError('argument req is required');\n  }\n\n  // simple header parsing\n  var proxyAddrs = (req.headers['x-forwarded-for'] || '').split(/ *, */).filter(Boolean).reverse();\n  var socketAddr = req.connection.remoteAddress;\n  var addrs = [socketAddr].concat(proxyAddrs\n\n  // return all addresses\n  );return addrs;\n}\n\n//# sourceMappingURL=index-compiled.js.map"]}