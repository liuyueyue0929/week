{"version":3,"sources":["index-compiled.js"],"names":[],"mappings":"AAAA;;;;;;;AAOA;;AAEA;;;;;AAKA,IAAI,YAAY,QAAQ,MAAR,EAAgB,aAAhB,CAAhB;AACA,IAAI,iBAAiB,QAAQ,gBAAR,CAArB;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,WAAW,QAAQ;;AAEvB;;;;;AAFe,CAAf,CAOE,OAAO,OAAP,GAAiB,WAAjB;AACF,OAAO,OAAP,CAAe,SAAf,GAA2B;;AAE3B;AAF2B,EAA3B,CAGG,2BAA2B,OAAO,OAAlC,EAA2C,SAAS,KAApD,EAA2D,OAAO,OAAP,CAAe;;AAE7E;;;;;AAFG,EAOD,SAAS,SAAT,CAAmB,MAAnB,EAA2B;AAC3B,SAAO,OAAO,OAAO,MAAP,EAAe,MAAf,CAAsB,CAAtB,IAA2B,IAAlC,CAAP;AACD;;AAED;;;;;;;AAOA,SAAS,WAAT,GAAuB;AACrB;AACA,MAAI,GAAJ;AACA,MAAI,GAAJ;AACA,MAAI,SAAS,GAAb;AACA,MAAI,QAAQ,EAAZ;AACA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAAU,MAA9B,EAAsC,GAAtC,EAA2C;AACzC,QAAI,MAAM,UAAU,CAAV,CAAV;AACA,QAAI,eAAe,KAAnB,EAA0B;AACxB,YAAM,GAAN;AACA,eAAS,IAAI,MAAJ,IAAc,IAAI,UAAlB,IAAgC,MAAzC;AACA;AACD;AACD,YAAQ,OAAO,GAAf;AACE,WAAK,QAAL;AACE,cAAM,GAAN;AACA;AACF,WAAK,QAAL;AACE,iBAAS,GAAT;AACA,YAAI,MAAM,CAAV,EAAa;AACX,oBAAU,8DAA8D,GAA9D,GAAoE,QAA9E;AACD;AACD;AACF,WAAK,QAAL;AACE,gBAAQ,GAAR;AACA;AAZJ;AAcD;;AAED,MAAI,OAAO,MAAP,KAAkB,QAAlB,KAA+B,SAAS,GAAT,IAAgB,UAAU,GAAzD,CAAJ,EAAmE;AACjE,cAAU,yDAAV;AACD;;AAED,MAAI,OAAO,MAAP,KAAkB,QAAlB,IAA8B,CAAC,SAAS,MAAT,CAAD,KAAsB,SAAS,GAAT,IAAgB,UAAU,GAAhD,CAAlC,EAAwF;AACtF,aAAS,GAAT;AACD;;AAED;AACA,MAAI,YAAY,YAAY,MAAZ,KAAuB,YAAY,UAAU,MAAV,CAAZ,CAAvC;;AAEA,MAAI,CAAC,GAAL,EAAU;AACR;AACA,UAAM,YAAY,IAAI,SAAJ,CAAc,GAAd,CAAZ,GAAiC,IAAI,KAAJ,CAAU,OAAO,SAAS,MAAT,CAAjB,CAAvC;AACA,UAAM,iBAAN,CAAwB,GAAxB,EAA6B,WAA7B;AACD;;AAED,MAAI,CAAC,SAAD,IAAc,EAAE,eAAe,SAAjB,CAAd,IAA6C,IAAI,MAAJ,KAAe,MAAhE,EAAwE;AACtE;AACA,QAAI,MAAJ,GAAa,SAAS,GAAtB;AACA,QAAI,MAAJ,GAAa,IAAI,UAAJ,GAAiB,MAA9B;AACD;;AAED,OAAK,IAAI,GAAT,IAAgB,KAAhB,EAAuB;AACrB,QAAI,QAAQ,QAAR,IAAoB,QAAQ,YAAhC,EAA8C;AAC5C,UAAI,GAAJ,IAAW,MAAM,GAAN,CAAX;AACD;AACF;;AAED,SAAO,GAAP;AACD;;AAED;;;;;AAKA,SAAS,0BAAT,GAAsC;AACpC,WAAS,SAAT,GAAqB;AACnB,UAAM,IAAI,SAAJ,CAAc,iCAAd,CAAN;AACD;;AAED,WAAS,SAAT,EAAoB,KAApB;;AAEA,SAAO,SAAP;AACD;;AAED;;;;;AAKA,SAAS,4BAAT,CAAsC,SAAtC,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D;AAC3D,MAAI,YAAY,KAAK,KAAL,CAAW,QAAX,IAAuB,IAAvB,GAA8B,OAAO,OAArD;;AAEA,WAAS,WAAT,CAAqB,OAArB,EAA8B;AAC5B;AACA,QAAI,MAAM,WAAW,IAAX,GAAkB,OAAlB,GAA4B,SAAS,IAAT,CAAtC;AACA,QAAI,MAAM,IAAI,KAAJ,CAAU,GAAV,CAAV;;AAEA;AACA,UAAM,iBAAN,CAAwB,GAAxB,EAA6B;;AAE7B;AAFA,MAGE,eAAe,GAAf,EAAoB,YAAY;;AAElC;AAFE,MAGA,OAAO,cAAP,CAAsB,GAAtB,EAA2B,SAA3B,EAAsC;AACtC,kBAAY,IAD0B;AAEtC,oBAAc,IAFwB;AAGtC,aAAO,GAH+B;AAItC,gBAAU;;AAGZ;AAPwC,KAAtC,EAQA,OAAO,cAAP,CAAsB,GAAtB,EAA2B,MAA3B,EAAmC;AACnC,kBAAY,KADuB;AAEnC,oBAAc,IAFqB;AAGnC,aAAO,SAH4B;AAInC,gBAAU;AAJyB,KAAnC;;AAOF,WAAO,GAAP;AACD;;AAED,WAAS,WAAT,EAAsB,SAAtB;;AAEA,cAAY,SAAZ,CAAsB,MAAtB,GAA+B,IAA/B;AACA,cAAY,SAAZ,CAAsB,UAAtB,GAAmC,IAAnC;AACA,cAAY,SAAZ,CAAsB,MAAtB,GAA+B,IAA/B;;AAEA,SAAO,WAAP;AACD;;AAED;;;;;AAKA,SAAS,4BAAT,CAAsC,SAAtC,EAAiD,IAAjD,EAAuD,IAAvD,EAA6D;AAC3D,MAAI,YAAY,KAAK,KAAL,CAAW,QAAX,IAAuB,IAAvB,GAA8B,OAAO,OAArD;;AAEA,WAAS,WAAT,CAAqB,OAArB,EAA8B;AAC5B;AACA,QAAI,MAAM,WAAW,IAAX,GAAkB,OAAlB,GAA4B,SAAS,IAAT,CAAtC;AACA,QAAI,MAAM,IAAI,KAAJ,CAAU,GAAV,CAAV;;AAEA;AACA,UAAM,iBAAN,CAAwB,GAAxB,EAA6B;;AAE7B;AAFA,MAGE,eAAe,GAAf,EAAoB,YAAY;;AAElC;AAFE,MAGA,OAAO,cAAP,CAAsB,GAAtB,EAA2B,SAA3B,EAAsC;AACtC,kBAAY,IAD0B;AAEtC,oBAAc,IAFwB;AAGtC,aAAO,GAH+B;AAItC,gBAAU;;AAGZ;AAPwC,KAAtC,EAQA,OAAO,cAAP,CAAsB,GAAtB,EAA2B,MAA3B,EAAmC;AACnC,kBAAY,KADuB;AAEnC,oBAAc,IAFqB;AAGnC,aAAO,SAH4B;AAInC,gBAAU;AAJyB,KAAnC;;AAOF,WAAO,GAAP;AACD;;AAED,WAAS,WAAT,EAAsB,SAAtB;;AAEA,cAAY,SAAZ,CAAsB,MAAtB,GAA+B,IAA/B;AACA,cAAY,SAAZ,CAAsB,UAAtB,GAAmC,IAAnC;AACA,cAAY,SAAZ,CAAsB,MAAtB,GAA+B,KAA/B;;AAEA,SAAO,WAAP;AACD;;AAED;;;;;AAKA,SAAS,0BAAT,CAAoC,OAApC,EAA6C,KAA7C,EAAoD,SAApD,EAA+D;AAC7D,QAAM,OAAN,CAAc,SAAS,WAAT,CAAqB,IAArB,EAA2B;AACvC,QAAI,SAAJ;AACA,QAAI,OAAO,aAAa,SAAS,IAAT,CAAb,CAAX;;AAEA,YAAQ,UAAU,IAAV,CAAR;AACE,WAAK,GAAL;AACE,oBAAY,6BAA6B,SAA7B,EAAwC,IAAxC,EAA8C,IAA9C,CAAZ;AACA;AACF,WAAK,GAAL;AACE,oBAAY,6BAA6B,SAA7B,EAAwC,IAAxC,EAA8C,IAA9C,CAAZ;AACA;AANJ;;AASA,QAAI,SAAJ,EAAe;AACb;AACA,cAAQ,IAAR,IAAgB,SAAhB;AACA,cAAQ,IAAR,IAAgB,SAAhB;AACD;AACF;;AAED;AApBA,IAqBE,QAAQ,YAAR,IAAwB,UAAU,QAAV,CAAmB,QAAQ,SAA3B,EAAsC,wCAAtC,CAAxB;AACH;;AAED;;;;;AAKA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,SAAO,IAAI,KAAJ,CAAU,GAAV,EAAe,GAAf,CAAmB,UAAU,KAAV,EAAiB;AACzC,WAAO,MAAM,KAAN,CAAY,CAAZ,EAAe,CAAf,EAAkB,WAAlB,KAAkC,MAAM,KAAN,CAAY,CAAZ,CAAzC;AACD,GAFM,EAEJ,IAFI,CAEC,EAFD,EAEK,OAFL,CAEa,eAFb,EAE8B,EAF9B,CAAP;AAGD;;AAED","file":"index-compiled-compiled.js","sourcesContent":["/*!\n * http-errors\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar deprecate = require('depd')('http-errors');\nvar setPrototypeOf = require('setprototypeof');\nvar statuses = require('statuses');\nvar inherits = require('inherits'\n\n/**\n * Module exports.\n * @public\n */\n\n);module.exports = createError;\nmodule.exports.HttpError = createHttpErrorConstructor\n\n// Populate exports for all constructors\n();populateConstructorExports(module.exports, statuses.codes, module.exports.HttpError\n\n/**\n * Get the code class of a status code.\n * @private\n */\n\n);function codeClass(status) {\n  return Number(String(status).charAt(0) + '00');\n}\n\n/**\n * Create a new HTTP Error.\n *\n * @returns {Error}\n * @public\n */\n\nfunction createError() {\n  // so much arity going on ~_~\n  var err;\n  var msg;\n  var status = 500;\n  var props = {};\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i];\n    if (arg instanceof Error) {\n      err = arg;\n      status = err.status || err.statusCode || status;\n      continue;\n    }\n    switch (typeof arg) {\n      case 'string':\n        msg = arg;\n        break;\n      case 'number':\n        status = arg;\n        if (i !== 0) {\n          deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)');\n        }\n        break;\n      case 'object':\n        props = arg;\n        break;\n    }\n  }\n\n  if (typeof status === 'number' && (status < 400 || status >= 600)) {\n    deprecate('non-error status code; use only 4xx or 5xx status codes');\n  }\n\n  if (typeof status !== 'number' || !statuses[status] && (status < 400 || status >= 600)) {\n    status = 500;\n  }\n\n  // constructor\n  var HttpError = createError[status] || createError[codeClass(status)];\n\n  if (!err) {\n    // create error\n    err = HttpError ? new HttpError(msg) : new Error(msg || statuses[status]);\n    Error.captureStackTrace(err, createError);\n  }\n\n  if (!HttpError || !(err instanceof HttpError) || err.status !== status) {\n    // add properties to generic error\n    err.expose = status < 500;\n    err.status = err.statusCode = status;\n  }\n\n  for (var key in props) {\n    if (key !== 'status' && key !== 'statusCode') {\n      err[key] = props[key];\n    }\n  }\n\n  return err;\n}\n\n/**\n * Create HTTP error abstract base class.\n * @private\n */\n\nfunction createHttpErrorConstructor() {\n  function HttpError() {\n    throw new TypeError('cannot construct abstract class');\n  }\n\n  inherits(HttpError, Error);\n\n  return HttpError;\n}\n\n/**\n * Create a constructor for a client error.\n * @private\n */\n\nfunction createClientErrorConstructor(HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error';\n\n  function ClientError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code];\n    var err = new Error(msg);\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ClientError\n\n    // adjust the [[Prototype]]\n    );setPrototypeOf(err, ClientError.prototype\n\n    // redefine the error message\n    );Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }\n\n    // redefine the error name\n    );Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n\n    return err;\n  }\n\n  inherits(ClientError, HttpError);\n\n  ClientError.prototype.status = code;\n  ClientError.prototype.statusCode = code;\n  ClientError.prototype.expose = true;\n\n  return ClientError;\n}\n\n/**\n * Create a constructor for a server error.\n * @private\n */\n\nfunction createServerErrorConstructor(HttpError, name, code) {\n  var className = name.match(/Error$/) ? name : name + 'Error';\n\n  function ServerError(message) {\n    // create the error object\n    var msg = message != null ? message : statuses[code];\n    var err = new Error(msg);\n\n    // capture a stack trace to the construction point\n    Error.captureStackTrace(err, ServerError\n\n    // adjust the [[Prototype]]\n    );setPrototypeOf(err, ServerError.prototype\n\n    // redefine the error message\n    );Object.defineProperty(err, 'message', {\n      enumerable: true,\n      configurable: true,\n      value: msg,\n      writable: true\n    }\n\n    // redefine the error name\n    );Object.defineProperty(err, 'name', {\n      enumerable: false,\n      configurable: true,\n      value: className,\n      writable: true\n    });\n\n    return err;\n  }\n\n  inherits(ServerError, HttpError);\n\n  ServerError.prototype.status = code;\n  ServerError.prototype.statusCode = code;\n  ServerError.prototype.expose = false;\n\n  return ServerError;\n}\n\n/**\n * Populate the exports object with constructors for every error class.\n * @private\n */\n\nfunction populateConstructorExports(exports, codes, HttpError) {\n  codes.forEach(function forEachCode(code) {\n    var CodeError;\n    var name = toIdentifier(statuses[code]);\n\n    switch (codeClass(code)) {\n      case 400:\n        CodeError = createClientErrorConstructor(HttpError, name, code);\n        break;\n      case 500:\n        CodeError = createServerErrorConstructor(HttpError, name, code);\n        break;\n    }\n\n    if (CodeError) {\n      // export the constructor\n      exports[code] = CodeError;\n      exports[name] = CodeError;\n    }\n  }\n\n  // backwards-compatibility\n  );exports[\"I'mateapot\"] = deprecate.function(exports.ImATeapot, '\"I\\'mateapot\"; use \"ImATeapot\" instead');\n}\n\n/**\n * Convert a string of words to a JavaScript identifier.\n * @private\n */\n\nfunction toIdentifier(str) {\n  return str.split(' ').map(function (token) {\n    return token.slice(0, 1).toUpperCase() + token.slice(1);\n  }).join('').replace(/[^ _0-9a-z]/gi, '');\n}\n\n//# sourceMappingURL=index-compiled.js.map"]}