{"version":3,"sources":["PacketWriter-compiled.js"],"names":[],"mappings":"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","file":"PacketWriter-compiled-compiled.js","sourcesContent":["var BIT_16 = Math.pow(2, 16);\nvar BIT_24 = Math.pow(2, 24);\nvar BUFFER_ALLOC_SIZE = Math.pow(2, 8);\n// The maximum precision JS Numbers can hold precisely\n// Don't panic: Good enough to represent byte values up to 8192 TB\nvar IEEE_754_BINARY_64_PRECISION = Math.pow(2, 53);\nvar MAX_PACKET_LENGTH = Math.pow(2, 24) - 1;\n\nmodule.exports = PacketWriter;\nfunction PacketWriter() {\n  this._buffer = null;\n  this._offset = 0;\n}\n\nPacketWriter.prototype.toBuffer = function toBuffer(parser) {\n  if (!this._buffer) {\n    this._buffer = new Buffer(0);\n    this._offset = 0;\n  }\n\n  var buffer = this._buffer;\n  var length = this._offset;\n  var packets = Math.floor(length / MAX_PACKET_LENGTH) + 1;\n\n  this._buffer = new Buffer(length + packets * 4);\n  this._offset = 0;\n\n  for (var packet = 0; packet < packets; packet++) {\n    var isLast = packet + 1 === packets;\n    var packetLength = isLast ? length % MAX_PACKET_LENGTH : MAX_PACKET_LENGTH;\n\n    var packetNumber = parser.incrementPacketNumber();\n\n    this.writeUnsignedNumber(3, packetLength);\n    this.writeUnsignedNumber(1, packetNumber);\n\n    var start = packet * MAX_PACKET_LENGTH;\n    var end = start + packetLength;\n\n    this.writeBuffer(buffer.slice(start, end));\n  }\n\n  return this._buffer;\n};\n\nPacketWriter.prototype.writeUnsignedNumber = function (bytes, value) {\n  this._allocate(bytes);\n\n  for (var i = 0; i < bytes; i++) {\n    this._buffer[this._offset++] = value >> i * 8 & 0xff;\n  }\n};\n\nPacketWriter.prototype.writeFiller = function (bytes) {\n  this._allocate(bytes);\n\n  for (var i = 0; i < bytes; i++) {\n    this._buffer[this._offset++] = 0x00;\n  }\n};\n\nPacketWriter.prototype.writeNullTerminatedString = function (value, encoding) {\n  // Typecast undefined into '' and numbers into strings\n  value = value || '';\n  value = value + '';\n\n  var bytes = Buffer.byteLength(value, encoding || 'utf-8') + 1;\n  this._allocate(bytes);\n\n  this._buffer.write(value, this._offset, encoding);\n  this._buffer[this._offset + bytes - 1] = 0x00;\n\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeString = function (value) {\n  // Typecast undefined into '' and numbers into strings\n  value = value || '';\n  value = value + '';\n\n  var bytes = Buffer.byteLength(value, 'utf-8');\n  this._allocate(bytes);\n\n  this._buffer.write(value, this._offset, 'utf-8');\n\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeBuffer = function (value) {\n  var bytes = value.length;\n\n  this._allocate(bytes);\n  value.copy(this._buffer, this._offset);\n  this._offset += bytes;\n};\n\nPacketWriter.prototype.writeLengthCodedNumber = function (value) {\n  if (value === null) {\n    this._allocate(1);\n    this._buffer[this._offset++] = 251;\n    return;\n  }\n\n  if (value <= 250) {\n    this._allocate(1);\n    this._buffer[this._offset++] = value;\n    return;\n  }\n\n  if (value > IEEE_754_BINARY_64_PRECISION) {\n    throw new Error('writeLengthCodedNumber: JS precision range exceeded, your ' + 'number is > 53 bit: \"' + value + '\"');\n  }\n\n  if (value < BIT_16) {\n    this._allocate(3);\n    this._buffer[this._offset++] = 252;\n  } else if (value < BIT_24) {\n    this._allocate(4);\n    this._buffer[this._offset++] = 253;\n  } else {\n    this._allocate(9);\n    this._buffer[this._offset++] = 254;\n  }\n\n  // 16 Bit\n  this._buffer[this._offset++] = value & 0xff;\n  this._buffer[this._offset++] = value >> 8 & 0xff;\n\n  if (value < BIT_16) {\n    return;\n  }\n\n  // 24 Bit\n  this._buffer[this._offset++] = value >> 16 & 0xff;\n\n  if (value < BIT_24) {\n    return;\n  }\n\n  this._buffer[this._offset++] = value >> 24 & 0xff;\n\n  // Hack: Get the most significant 32 bit (JS bitwise operators are 32 bit)\n  value = value.toString(2);\n  value = value.substr(0, value.length - 32);\n  value = parseInt(value, 2);\n\n  this._buffer[this._offset++] = value & 0xff;\n  this._buffer[this._offset++] = value >> 8 & 0xff;\n  this._buffer[this._offset++] = value >> 16 & 0xff;\n\n  // Set last byte to 0, as we can only support 53 bits in JS (see above)\n  this._buffer[this._offset++] = 0;\n};\n\nPacketWriter.prototype.writeLengthCodedBuffer = function (value) {\n  var bytes = value.length;\n  this.writeLengthCodedNumber(bytes);\n  this.writeBuffer(value);\n};\n\nPacketWriter.prototype.writeNullTerminatedBuffer = function (value) {\n  this.writeBuffer(value);\n  this.writeFiller(1); // 0x00 terminator\n};\n\nPacketWriter.prototype.writeLengthCodedString = function (value) {\n  if (value === null) {\n    this.writeLengthCodedNumber(null);\n    return;\n  }\n\n  value = value === undefined ? '' : String(value);\n\n  var bytes = Buffer.byteLength(value, 'utf-8');\n  this.writeLengthCodedNumber(bytes);\n\n  if (!bytes) {\n    return;\n  }\n\n  this._allocate(bytes);\n  this._buffer.write(value, this._offset, 'utf-8');\n  this._offset += bytes;\n};\n\nPacketWriter.prototype._allocate = function _allocate(bytes) {\n  if (!this._buffer) {\n    this._buffer = new Buffer(Math.max(BUFFER_ALLOC_SIZE, bytes));\n    this._offset = 0;\n    return;\n  }\n\n  var bytesRemaining = this._buffer.length - this._offset;\n  if (bytesRemaining >= bytes) {\n    return;\n  }\n\n  var newSize = this._buffer.length + Math.max(BUFFER_ALLOC_SIZE, bytes);\n  var oldBuffer = this._buffer;\n\n  this._buffer = new Buffer(newSize);\n  oldBuffer.copy(this._buffer);\n};\n\n//# sourceMappingURL=PacketWriter-compiled.js.map"]}