{"version":3,"sources":["PoolNamespace.js"],"names":[],"mappings":"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","file":"PoolNamespace-compiled.js","sourcesContent":["var Connection   = require('./Connection');\nvar PoolSelector = require('./PoolSelector');\n\nmodule.exports = PoolNamespace;\n\n/**\n * PoolNamespace\n * @constructor\n * @param {PoolCluster} cluster The parent cluster for the namespace\n * @param {string} pattern The selection pattern to use\n * @param {string} selector The selector name to use\n * @public\n */\nfunction PoolNamespace(cluster, pattern, selector) {\n  this._cluster = cluster;\n  this._pattern = pattern;\n  this._selector = new PoolSelector[selector]();\n}\n\nPoolNamespace.prototype.getConnection = function(cb) {\n  var clusterNode = this._getClusterNode();\n  var cluster     = this._cluster;\n  var namespace   = this;\n\n  if (clusterNode === null) {\n    var err = null;\n\n    if (this._cluster._findNodeIds(this._pattern, true).length !== 0) {\n      err = new Error('Pool does not have online node.');\n      err.code = 'POOL_NONEONLINE';\n    } else {\n      err = new Error('Pool does not exist.');\n      err.code = 'POOL_NOEXIST';\n    }\n\n    cb(err);\n    return;\n  }\n\n  cluster._getConnection(clusterNode, function(err, connection) {\n    var retry = err && cluster._canRetry\n      && cluster._findNodeIds(namespace._pattern).length !== 0;\n\n    if (retry) {\n      namespace.getConnection(cb);\n      return;\n    }\n\n    if (err) {\n      cb(err);\n      return;\n    }\n\n    cb(null, connection);\n  });\n};\n\nPoolNamespace.prototype.query = function (sql, values, cb) {\n  var cluster     = this._cluster;\n  var clusterNode = this._getClusterNode();\n  var query       = Connection.createQuery(sql, values, cb);\n  var namespace   = this;\n\n  if (clusterNode === null) {\n    var err = null;\n\n    if (this._cluster._findNodeIds(this._pattern, true).length !== 0) {\n      err = new Error('Pool does not have online node.');\n      err.code = 'POOL_NONEONLINE';\n    } else {\n      err = new Error('Pool does not exist.');\n      err.code = 'POOL_NOEXIST';\n    }\n\n    process.nextTick(function () {\n      query.on('error', function () {});\n      query.end(err);\n    });\n    return query;\n  }\n\n  if (!(typeof sql === 'object' && 'typeCast' in sql)) {\n    query.typeCast = clusterNode.pool.config.connectionConfig.typeCast;\n  }\n\n  if (clusterNode.pool.config.connectionConfig.trace) {\n    // Long stack trace support\n    query._callSite = new Error();\n  }\n\n  cluster._getConnection(clusterNode, function (err, conn) {\n    var retry = err && cluster._canRetry\n      && cluster._findNodeIds(namespace._pattern).length !== 0;\n\n    if (retry) {\n      namespace.query(query);\n      return;\n    }\n\n    if (err) {\n      query.on('error', function () {});\n      query.end(err);\n      return;\n    }\n\n    // Release connection based off event\n    query.once('end', function() {\n      conn.release();\n    });\n\n    conn.query(query);\n  });\n\n  return query;\n};\n\nPoolNamespace.prototype._getClusterNode = function _getClusterNode() {\n  var foundNodeIds = this._cluster._findNodeIds(this._pattern);\n  var nodeId;\n\n  switch (foundNodeIds.length) {\n    case 0:\n      nodeId = null;\n      break;\n    case 1:\n      nodeId = foundNodeIds[0];\n      break;\n    default:\n      nodeId = this._selector(foundNodeIds);\n      break;\n  }\n\n  return nodeId !== null\n    ? this._cluster._getNode(nodeId)\n    : null;\n};\n"]}