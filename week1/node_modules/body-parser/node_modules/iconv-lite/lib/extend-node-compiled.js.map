{"version":3,"sources":["extend-node.js"],"names":[],"mappings":"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","file":"extend-node-compiled.js","sourcesContent":["\"use strict\"\n\n// == Extend Node primitives to use iconv-lite =================================\n\nmodule.exports = function (iconv) {\n    var original = undefined; // Place to keep original methods.\n\n    // Node authors rewrote Buffer internals to make it compatible with\n    // Uint8Array and we cannot patch key functions since then.\n    iconv.supportsNodeEncodingsExtension = !(new Buffer(0) instanceof Uint8Array);\n\n    iconv.extendNodeEncodings = function extendNodeEncodings() {\n        if (original) return;\n        original = {};\n\n        if (!iconv.supportsNodeEncodingsExtension) {\n            console.error(\"ACTION NEEDED: require('iconv-lite').extendNodeEncodings() is not supported in your version of Node\");\n            console.error(\"See more info at https://github.com/ashtuchkin/iconv-lite/wiki/Node-v4-compatibility\");\n            return;\n        }\n\n        var nodeNativeEncodings = {\n            'hex': true, 'utf8': true, 'utf-8': true, 'ascii': true, 'binary': true, \n            'base64': true, 'ucs2': true, 'ucs-2': true, 'utf16le': true, 'utf-16le': true,\n        };\n\n        Buffer.isNativeEncoding = function(enc) {\n            return enc && nodeNativeEncodings[enc.toLowerCase()];\n        }\n\n        // -- SlowBuffer -----------------------------------------------------------\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        original.SlowBufferToString = SlowBuffer.prototype.toString;\n        SlowBuffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.SlowBufferWrite = SlowBuffer.prototype.write;\n        SlowBuffer.prototype.write = function(string, offset, length, encoding) {\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.SlowBufferWrite.call(this, string, offset, length, encoding);\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n        }\n\n        // -- Buffer ---------------------------------------------------------------\n\n        original.BufferIsEncoding = Buffer.isEncoding;\n        Buffer.isEncoding = function(encoding) {\n            return Buffer.isNativeEncoding(encoding) || iconv.encodingExists(encoding);\n        }\n\n        original.BufferByteLength = Buffer.byteLength;\n        Buffer.byteLength = SlowBuffer.byteLength = function(str, encoding) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferByteLength.call(this, str, encoding);\n\n            // Slow, I know, but we don't have a better way yet.\n            return iconv.encode(str, encoding).length;\n        }\n\n        original.BufferToString = Buffer.prototype.toString;\n        Buffer.prototype.toString = function(encoding, start, end) {\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferToString.call(this, encoding, start, end);\n\n            // Otherwise, use our decoding method.\n            if (typeof start == 'undefined') start = 0;\n            if (typeof end == 'undefined') end = this.length;\n            return iconv.decode(this.slice(start, end), encoding);\n        }\n\n        original.BufferWrite = Buffer.prototype.write;\n        Buffer.prototype.write = function(string, offset, length, encoding) {\n            var _offset = offset, _length = length, _encoding = encoding;\n            // Support both (string, offset, length, encoding)\n            // and the legacy (string, encoding, offset, length)\n            if (isFinite(offset)) {\n                if (!isFinite(length)) {\n                    encoding = length;\n                    length = undefined;\n                }\n            } else {  // legacy\n                var swap = encoding;\n                encoding = offset;\n                offset = length;\n                length = swap;\n            }\n\n            encoding = String(encoding || 'utf8').toLowerCase();\n\n            // Use native conversion when possible\n            if (Buffer.isNativeEncoding(encoding))\n                return original.BufferWrite.call(this, string, _offset, _length, _encoding);\n\n            offset = +offset || 0;\n            var remaining = this.length - offset;\n            if (!length) {\n                length = remaining;\n            } else {\n                length = +length;\n                if (length > remaining) {\n                    length = remaining;\n                }\n            }\n\n            if (string.length > 0 && (length < 0 || offset < 0))\n                throw new RangeError('attempt to write beyond buffer bounds');\n\n            // Otherwise, use our encoding method.\n            var buf = iconv.encode(string, encoding);\n            if (buf.length < length) length = buf.length;\n            buf.copy(this, offset, 0, length);\n            return length;\n\n            // TODO: Set _charsWritten.\n        }\n\n\n        // -- Readable -------------------------------------------------------------\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            original.ReadableSetEncoding = Readable.prototype.setEncoding;\n            Readable.prototype.setEncoding = function setEncoding(enc, options) {\n                // Use our own decoder, it has the same interface.\n                // We cannot use original function as it doesn't handle BOM-s.\n                this._readableState.decoder = iconv.getDecoder(enc, options);\n                this._readableState.encoding = enc;\n            }\n\n            Readable.prototype.collect = iconv._collect;\n        }\n    }\n\n    // Remove iconv-lite Node primitive extensions.\n    iconv.undoExtendNodeEncodings = function undoExtendNodeEncodings() {\n        if (!iconv.supportsNodeEncodingsExtension)\n            return;\n        if (!original)\n            throw new Error(\"require('iconv-lite').undoExtendNodeEncodings(): Nothing to undo; extendNodeEncodings() is not called.\")\n\n        delete Buffer.isNativeEncoding;\n\n        var SlowBuffer = require('buffer').SlowBuffer;\n\n        SlowBuffer.prototype.toString = original.SlowBufferToString;\n        SlowBuffer.prototype.write = original.SlowBufferWrite;\n\n        Buffer.isEncoding = original.BufferIsEncoding;\n        Buffer.byteLength = original.BufferByteLength;\n        Buffer.prototype.toString = original.BufferToString;\n        Buffer.prototype.write = original.BufferWrite;\n\n        if (iconv.supportsStreams) {\n            var Readable = require('stream').Readable;\n\n            Readable.prototype.setEncoding = original.ReadableSetEncoding;\n            delete Readable.prototype.collect;\n        }\n\n        original = undefined;\n    }\n}\n"]}