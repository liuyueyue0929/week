{"version":3,"sources":["internal.js"],"names":[],"mappings":"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","file":"internal-compiled.js","sourcesContent":["\"use strict\"\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (new Buffer(\"eda080\", 'hex').toString().length == 3) {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    StringDecoder.call(this, codec.enc);\n}\n\nInternalDecoder.prototype = StringDecoder.prototype;\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return new Buffer(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return new Buffer(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return new Buffer(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = new Buffer(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n"]}